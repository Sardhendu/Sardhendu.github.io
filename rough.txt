----------------

#### Property Classification [*Link*](https://github.com/Sardhendu/PropertyClassification)
<div id="wrapper">
    <div class="twoColumn">
        <img align="right" width="150" height="150"  src="https://github.com/Sardhendu/Sardhendu.github.io/blob/master/SAM.png">
    </div>
    <div class="twoColumn">
         <p>This project is aimed to classify the type of property (Land/House) given a "Address string" or a "real-estate property image". Data is collected and integrated from several sources. Building boundaries are collected from <b>Open Street Map (OSM)</b> and Satellite, Aerial, Streetside images are collected from <b>Google Maps</b> and <b>Bing Maps</b>. Concepts of Semantic Segmentation and model emsembles are employed to output the best prediction given image types.
            <br><br>Skills developed: Python, Scikit-learn, OpenCV, GeoPandas, Shapely, TensorFlow (GPU), Keras, Geojson, Azure Cloud stack</br></br>
         </p>
    </div>
</div>


-----------

#### Credit Card Fraud [*Link*](https://github.com/Sardhendu/Data-Science-Projects/tree/master/CreditCardFraudDetection)
<div id="wrapper">
    <div class="twoColumn">
        <img align="right" width="200" height="150"  src="https://lh3.googleusercontent.com/B4rjt4TXvhBKRWyG3elnHp3BBCVvwY142_F9E_-8jc-OjYghymjvriplnKv7rMPHkGbMDVyknsv22YOXE2PX_xlrEtsMw8hr_s-gGf9qRAGt0iP-DEI4K-QoffGnY_4DGXdxffJ4sKccn_Qq46PTvBiT1cB9bxxhJM031ZiR-4jXxaREotCHel8vvlJJttEib4tWWGFLE8ZsrJqraYIti3DABd0ocFxn3KXlq7EDbF1GKXk3bxJWrwJIE7N7uGqXAqIdqASvkNhg5MOO2wh80GY0UwWu-vwewwDCsVxgDNjQ6apyzdVrMnRwnCZQpkHZLWJQz0XNxiioAqGAJx6cFLh3pLATFlK9-dRjo7mHaw9f7M_XZH-12vrOKWlJVYP6Luj56SHzgATWxG015ZORJp5IyGroF9Ux535zQ3vorF4CyncXqBgksliy3AbaX-Uv28da3Yh-0UjLit0lENyb1hfpJ48XpquDhAM4a7RCFi6qty1s17byT5qDXOdfNIeQ0uVhuW0fkGOlBtacdEMWssrbmNguPq5xAqSVQk4u8oLIH78I03GMnUwQJXPWvnKD67kZLbRMGeTdMFPQwmq6ZM7AnGaNGZT4MxcXnqI=w620-h388-no">
    </div>
    <div class="twoColumn">
         <p>This project is aimed to identify credit card frauds. Pattern Recognition techniques such as <b>Bagging and Boosting with Trees</b>, <b>Deep Neural Nets</b>, <b>Autoencoders</b> and <b>Parallelized Bayesian nets</b> are evaluated. The dataset is collected from Kaggle. As a outcome the models parameters are tuned to have high performance in identifying fraud cases.
            <br><br>Skills developed: Python, R, TensorFlow </br></br>
         </p>
    </div>
</div>

--------------------------

<h2> Projects Accomplished </h2>

-------------------------

#### Deep Face Recognition [*Link*](https://github.com/Sardhendu/DeepFaceRecognition)

<div id="wrapper">
    <div class="twoColumn">
        <img align="right" width="200" height="150"  src="https://lh3.googleusercontent.com/bNa6NQUAkSYzZ3J9RFs0_0oN7SspOKAU7IYZalrWQZEaEdSznuynsej4Kc1YUnQ-V1cFw4MK7qyukpIWHOhMQxOEILgdLDIJWLIFQt_NU9DxETe7m2CmJPXKlYOvNf0imEmpkhZAaT1--3ktklVKjQ6rVm_mQ_Hf1nn5n8p5jvAfBKhjcX4YcxruZKdCCpJGpBewh9jyxcUGo8R1S-Dd_A84ZXKj0fYdj-8JBidLf--VQjtvS39mKEp7_nMnk60bebSEcGFhHeXn1So7qXQRY1Se7LhBOk2Mc8vED3WYwkqRZ1ZGV5TD8_kp7ZEfmXlyoVDjTO70QE4i-syExthvl_26JBeMwDda9nUXQjlQMYO5c4CtjORp2veS96ayOkNwF3fmFqfT-sBPek8kQvekGUd7xS1VOB4c04s-fjJwAWewN6S1zLGvRnRxDtkES0vHZTV1HxUtNjnyTJxPoFvYPQFUa7S8XnhVMk238EyK0yRN7Y1yM08W8GpD4MIpo11u9AYuFFlht4dVCaAuVgBx0F7N4EzmaxIgW2_0ObnJ8lWhtqKp6CkHBmd8ffNNogM3l3xgS87t3lFFefeo9qbTZCz2p_tW4_0qnxVojlQ=w454-h378-no">
    </div>
    <div class="twoColumn">
         <p>This application leverages Transfer Learning with Google Net (NN4 small) architecture to recognize faces given an image. It employs a multi-step approach, 1) Extracting all the faces from an image, 2) Labeling the faces with the person name. The application implements ideas from the paper <a href https://arxiv.org/pdf/1503.03832.pdf> Facenet </a>
            <br><br>Skills developed: Python, Tensorflow, OpenCV </br></br>
         </p>
    </div>
</div>

-----------------

#### CIFAR-10 Object Recognition [*Link*](https://github.com/Sardhendu/CIFAR10-Object-Recognition)

<div id="wrapper">
    <div class="twoColumn">
        <img align="right" width="200" height="150"  src="https://lh3.googleusercontent.com/_ra4kUet2rf0YOBUtEUymjtUETKCn2JtqrpllrR2HUsFaUE-ap9-4XtmWwJUTlfCIjzQNz3WJFsV4wycdlsCGOqMtNTU5MxPxzZzzDotaNJnBsN_I2jx88bRXCtF1-x01xK4GOuQlqnN5ORn51agldjWsNDMSmhW7LiAcf6yQTTMchXI6BQLEIxaTVDsePm69Apqcs35K0uTLaFDniUI4R_0dQz2IovRuHbV96PtdHBk9QaUW7_13cooMpGDEQnFIgJe0MO6T0HSZkcq36_BT8YuJZrcobb9DnrVyTK4nK8pOV5tDotW8-ayBU7b4p9SNVhMug40b1CpsgPlWCgbUNQglfZBssMUN2P6YNr3nnkJ-8erGJq3Ly9Blg7s1gCNMg-EJwe_gTcsnG6OyUT7UC0i5pgv9R8fMTUQOb-o0ZqZ3fZWRTmCuzY_q2NTadZgBbr6RAhNUcwT0vSOItv7LRbp8xgT5N0M1gCSrfWxnooymKhzsa5_tTLDrR3VSG9E1n2yGasR8qPo0mwNEObqpisOw1g40TfjE6F9EhIkNOMLQltK8lxVXJ4fjkT9OgXCT5KDXCgQmvDHOwf15fKinISPyQnBohNRs-GVI-I=w363-h366-no">
    </div>
    <div class="twoColumn">
         <p>This project was aimed to evaluate a mix of several Deep Learning, Image Processing and Machine Learning models to classify an object in an image. The data was collected from [Kaggle](https://www.kaggle.com/c/cifar-10). For the sake of simplicity and to evaluate the algorithms, only 2 classes were used.<a href https://github.com/Sardhendu/CIFAR10-Object-Recognition/blob/master/Project-Presentation.pdf> PRESENTATION LINK </a><br><br>Skills developed: Python, Scikit-learn, OpenCV, Tensorflow</br></br>
         </p>
    </div>
</div>

-----------

#### Diabetic-Readmission Analysis [*Link*](https://github.com/Sardhendu/Data-Science-Projects/blob/master/Diabetic-Readmission/DiabeticReadmission-Spark.ipynb)

<div id="wrapper">
    <div class="twoColumn">
        <img align="right" width="200" height="150"  src="https://lh3.googleusercontent.com/k0xS03vMLRgd5ar5O2n54zuF5pvygTE7oJGbjxhEfuKNxLPhG7mXRoJ3ZU5lVXjk34JCfs4Cea2xuz2rFUqkb0_L70Jp6WRsVc6KzcPlzdIXvL2hZ3aW4Cjgk0t86PzTy6enAR_FxQu9cpPJ9im26G8F0M85Otx1sYFCHawmjVUqCueOJe31gNGLfuaOOKi8dTppK4V2mpSPyde7VY6CPCBjTZV7AoMPgyIJnhg_f9mkmQWQ3vMiuqsaLmJRY1l_hL3tqNxeAYGBIDFNGsbei3h5T4IvHTBC-NOFRCpWLtpu3KK987BGGMzttJU4-D_gxrDtdq9010HAe1Wp3tQVSMNVcX5xijaW6jPZrre3BjpSH4dJmDLZRN6O6-Ps3oeEbTKkzcyF7yExocF11ZiicqyHpRyNuvTfe8cvhiuO3VpUHHaLEtNrus1_-a_eAQTh4p9GfQN7EAU29WsshCHETT5y8NBq7WOF8og1NBRppeSkyIzcanr56YecrN0UZflviHsXRSSPvjP2ji4XriOXED6iZJMhgMqRA9P7w8a4pUwJLvX6XmqGoUTc_R2g0wzwhOYAMse0ro3cfGK3nhxSBitqrHsEuN1GGDGXlqg=w300-h200-no">
    </div>
    <div class="twoColumn">
         <p>This project was aimed to analyze the factors led to the early re-admission of a diabetic patient. In addition, the model was trained to predict whether a diabetic patient would be re-admitted within the next 30 days. The data set was collected from <a href https://archive.ics.uci.edu/ml/index.php> UCI repository </a> and implements idea from the <a href https://www.hindawi.com/journals/bmri/2014/781670/> paper </a> published by the authors. The data analysis pipeline was build using Py-Spark.<br><br>Skills developed: Python, Py-Spark (MLlib)</br></br>
         </p>
    </div>
</div>


-------------

#### Crime Rate Prediction [*Link*](https://github.com/Sardhendu/Data-Science-Projects/blob/master/Diabetic-Readmission/DiabeticReadmission-Spark.ipynb)

<div id="wrapper">
    <div class="twoColumn">
        <img align="right" width="200" height="150"  src="">
    </div>
    <div class="twoColumn">
         <p>This project was aimed to experiment and evaluate several Machine Learning algorithms. The classification task was to classify whether a locality was high crime zone or low crime zone and the regression task was to predict the crime rate.<br><br>Skills developed: Python, Scikit-learn</br></br>
         </p>
    </div>
</div>

--------------

<div id="wrapper">
    <div class="twoColumn">
        <img align="right" width="200" height="150"  src="https://github.com/Sardhendu/Sardhendu.github.io/blob/master/SAM.png">
    </div>
    <div class="twoColumn">
         <p>
            <h4>License Plate Extraction <a href="https://github.com/Sardhendu/License-Plate-Detection">Link</a> </h4>
            This project was aimed to detect and extract license plates of vehicles (4-wheelers) given an image. It takes a multi-step approach, 1) Using several Image processing techniques we extract all contours (Region of interests) from  test
         </p>
    </div>
</div
